// <auto-generated />
using ColorMixer.Storage.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ColorMixer.Storage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230827133852_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("ColorMixer.Storage.Models.ColorNodeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blue")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Blue");

                    b.Property<byte>("Green")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Green");

                    b.Property<byte>("Red")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Red");

                    b.HasKey("Id");

                    b.ToTable("ColorNodes");
                });

            modelBuilder.Entity("ColorMixer.Storage.Models.MixingOperationModel", b =>
                {
                    b.Property<int>("MixingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("LeftColorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("LeftColorId");

                    b.Property<byte>("Operation")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Operation");

                    b.Property<int>("RightColorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RightColorId");

                    b.Property<int>("SetId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SetId");

                    b.HasKey("MixingId");

                    b.HasIndex("LeftColorId");

                    b.HasIndex("RightColorId");

                    b.HasIndex("SetId");

                    b.ToTable("Mixings");
                });

            modelBuilder.Entity("ColorMixer.Storage.Models.SetModel", b =>
                {
                    b.Property<int>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("SetName")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("SetId");

                    b.ToTable("MixingSets");
                });

            modelBuilder.Entity("ColorMixer.Storage.Models.MixingOperationModel", b =>
                {
                    b.HasOne("ColorMixer.Storage.Models.ColorNodeModel", "LeftColor")
                        .WithMany()
                        .HasForeignKey("LeftColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColorMixer.Storage.Models.ColorNodeModel", "RightColor")
                        .WithMany()
                        .HasForeignKey("RightColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ColorMixer.Storage.Models.SetModel", "Set")
                        .WithMany("Operations")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeftColor");

                    b.Navigation("RightColor");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("ColorMixer.Storage.Models.SetModel", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
